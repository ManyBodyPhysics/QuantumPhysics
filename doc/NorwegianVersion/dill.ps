%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: book.dvi
%%CreationDate: Wed Sep 29 17:10:47 2010
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFRM1095 CMMI10 CMMI8 CMR10 CMR8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o dill.ps book.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.09.29:1710
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul
def /Lshow { currentpoint stroke M   0 vshift R show } def /Rshow {
currentpoint stroke M   dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M   dup stringwidth pop -2 div vshift
R show } def /UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor
Solid {pop []} if 0 setdash }  {pop pop pop Solid {pop []} if 0 setdash}
ifelse } def /BL { stroke userlinewidth 2 mul setlinewidth } def /AL
{ stroke userlinewidth 2 div setlinewidth } def /UL { dup gnulinewidth
mul /userlinewidth exch def       10 mul /udl exch def } def /PL {
stroke userlinewidth setlinewidth } def /LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0
{ PL [] 1 0 0 DL } def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 {
PL [2 dl 3 dl] 0 0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl
1 dl 3 dl] 1 1 0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL
} def /LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8
{ PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore
} def /Dia { stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg
V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt }
def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke
M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash
2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B93EC4488CF1
43FF3B2A427C5E1C756D1925B52D26103C0E620D4B6CF9C49D4A75DB63A2F3DD
154692023E81DE9950C15EAA7EDDE692D58FEFD061D9032926692234B283908F
54EFC2384D86B444F343FC4B74E7142F0A7CF28AC0DE181928AB8D94CD13583F
05EDD18CF2582518BE01DC67DC5599E412B60A2767C155A5853EF60122F205CE
119FC538B493BECDFDE17849C2F8D052178F54AF9921A0779394D333DDC1DCCD
7820E46A07926C88BE7B148236F0D8C3D8C0F05008521B61C09AD4D8EDE82D60
883E42920603F63F3AC8BB9FF20689E58CB218325533E850E51F28F41E74373B
386E5F59B6C8F87AF867CBA04D1A04002AB3CF9A0FC2634AB7ED2E7943E32848
0BE07B4720F27DCCBFDAEA7ADBCE3EC87BB9C20496219178EE14B16FD57CDD94
3473AEDE343340E98C5F84
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 61 /equal put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3901F92CC2EC9BC842
5EE578CF06846C7078E026DFCB18AD4D78023652F0165DE17C183E43752132BB
19F361414774D5C13AD718B01F47E61745009D823C3996FB208C3A9D4B4F116E
4D38E56725461BBA1FE17CDC27CD99AC7D748CF7750CA2C6E1EC5E4746AC85F5
E8274DA59750A144AD5AEBE6C9A7CE843BD6837FE2A88078124AA1A94EFC1C50
B811EAEB2679AD57294AB13E45AEEB8C6EA105696E341E4C14ECF573EEBB83E6
F9DE39BD6CC376158231CA2A83D91F721ABD116A40698F26610853E7FD075472
ED40CCE32031FCFAE2737B412807F7C9E6494D0B73B7AB13AFD20D5219A71562
12A7B57DD9965B15AFB38BEDA28D35D73282D4F1F9A15C4403B7C69C7E80DF54
C112D7813F7271A5474438A7CC380735F029CFDF4C0C30C3901A7E30F8B3B017
B1A663CC9481C79B903806F30AF37522828FD5DE3EC220C719B63A90FB3CE72D
AFC207F82CCD8250F4BA04D50D9B6D7AB78E87B456016CBC6273C129F6FBBF8B
E0110ED803D94F55FCD6F5A81F5BDC9CFBBF7D2C5DE7842D750468E59A7CE978
70AFE7245B3B612E9F4A53EB5EA8B5E8D543B1B76839F7AD640517429B9C4E5F
E983D6632A7F1CA1F45B6164586C1D41B65ADE919BE42961BC4C8CFF1690845A
A022687FED2A8FE680188F66BC00EECDD048B6439AC0E074A9E17CACC122253C
22379AEA6B3B11F18E48E6D1922F977D83F4904EC481D4263592793A43EDDBCD
C9C79BE39A5E6431447B214BF83A68D9F315C7E825754F3215C7DDB4535F7C49
2CB1D9E1A09CC255949F9DF3868A49C187DEBFDCF118B58051763BD042F106FF
D126673F21E1FFAFAEFC620C2D65E858082A29627916B84F21960010BB3BE96C
3FF801C00074C6076FD9932D6E0F7DB4076FB4129FDBD9598975C79FA089D09C
07B883124C8FCC3FD73A6DC308A31E6B68AB465DC3E4F74C734454850C56EFF8
D69851613F839F209DF11809ED9B6FE2E3291A95C91642FAE02CCF39E00F79CF
E5C8551E3EBD5676FCCEBA109F5D44A76EBA99DABEBA20B9D938A52996711272
A3EFACE0EEB0DAF7209CB3A2664E7CB12CC2967167AC5BBDFA4204FAA1B01A13
59AB762EB01B286F0DC437B462E7F7DF25FB89821B61EDB2DAA439A8631FE8ED
D2CB1D2B29E3E1C7B3C03B59DDFAC1F99483B1084E8D8D92E7D8993DD1796487
DAF93B533AC0F0A339FDC6C4E52E75150EF671BC3EDB00DD6F7F64E16670FF8E
F00703277AC7115F50AB3A1AA33DDCE8CE20497C771972434696275C96C1D936
05559D732896D8222A4C584FC15D7D075926D13E4B31B9F76D995346E7323A60
7A1EA7613FD94BFF5A77606B334402F70C3426C093953C3A50C2573D0CCB1FB1
71A5654C88ECEA4DBAE5DEEA9AD773054C10C157953EEB497473804D2D3A8E9E
F835BF35547919296B1C62E5FE3FF3621F9FF3DCF23BD5A8C13861905BA2A4B7
069960093474816C21E85B9318E5C2DA1876D1BC49A5E60A5D129BC2B6F2B620
3C93F57DB2E5B3B06E5C3E7CAEBF46F6FBB3C2F544F5B39C1902520D62BCDA31
00D9C889373AFD610E4C5478CF145467086E1DFCB4D84C4FEEFEEC1E2C7D8467
7C0BED5C137C319A51AAA22ADDF3192D0639ABB458A9681547B79F14C46B7128
2A6CBF3809332674B533D46695F26D54930F58F7311ECB9A019D5E6458A1C55F
31AF9EF2C6B82DC2DCDD9C2A91FE39F20BFCAB910B252A0E2FBEA9451A447B09
079F2436F15C93EA5E26C2F87482C4A23B2796CE56DEB0F12D6A77108239348D
34FFDAA29F66D9E033EC2D1C6F1A83279097A343047ACDD461542605A5F60B10
F008EC72895734FC95640DD9798F7172C049CE5B243D1A0B10E50B434F1F54B9
0BE19704EA0E79C5CF6EB0209D7DFC539C7643ACFC1358CD0571D0FCA48CC672
72E78DD83B41F0A8368448910DC562E453FA0E9D0EAAA138A3CE5A6116C77BE4
FCA8E38421CA693599D8C8B9D08AC94EA69F085CBD5FEC52FD7C1C46FEA78F15
06DD085EFE3758780CF04488B2875D8D9EE249518EFAEA754CF32DF6A71D1F07
8A72887A348C2716A0D71839BAC4B546FAA459196906285ED697D6B39A082995
743C3C64146E4425AC86470914D76887660615F863F40BEFA3F7678804C5F9D3
808B7137A56AA013A027429ED225059BA748FB2512A0DA4547C74928A1190DA5
AE8DEC77B06323AC39411A8FEC46EF2B3EABDE36D161D463901FA1F93C4237C5
84BFE593F2E3419B47F7367506A64288605C4B814D2D1CA36A559E3D81E1669B
066BBADFCB3AA83672B1680FB563BC51FEBE7B467FBE02435BC269B04490A4A8
92BF01FAB2815AE365C60210D5C452CBFF0A6EACCD68FC018D3470EC00965D06
2D4E9EBFD0ADEBEE1C9E2AA3E549F0DE4DF42761CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 23 /nu put
dup 66 /B put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124DFAE11BA4AB27032F02AB84277DB8B54826CC56005A3F2064A4B9AC
B13128AD279FA50B27DA85B5E1BF8C9320444BFD5E882820B2A5F5A93580FB2F
2C77472EFB35663F9BB4CB3294BDDEB11F8AD80F8893D0727E505E072BA80504
96254E4CB82BA5FB42303CB51F2410E646C1A26891FF9496AD6D693EB2DB7A9F
C88C3686F6AC30BA0FE6A0EB0B6A3BEF1606900A41051D1D0DBCFF2F8CEE740C
93FDDD5FC8EBD7EC54D09DF8FE2B5E5830FDABFC81E0B02AB1CAA94194ADFC74
110C9084AF347B5C31F6A3DBF64160947F468CEF6F2F2E53399F69627589CC0B
4CBC77EAB3E4BD3930FF566219204A49D0976490945902ABB9C634CC09F7F0D5
AC62C7D090A751A47DDCB2839DD8675B62C5ABBF8C5DD1298002BE8C0FCC77C0
93887EC50A8DF2110F9D6D3EE00DA0FB426E2E3B04CEED0DDF31B8862A827D11
C2A59BD6F068EEA690F9A86001B42C460111BED6D1F25760EB99C877E466B0E5
BF9CE5FD96FC613064C460F4F2F69689A10E488B05351A89F42E32ED51BF9C6D
00D16EC209DF997A23995A4730767A5364281E1115F523D8A44F34C35D338E00
EF5CBD0FAA2E7518D859DF4D7C827C11DB9B98D5222B9F563FA85A87670CA363
B4C3E6E569ADB193400F3B1767EF2B87D197DF3EF7E14A8FBA0A264808B20518
FD4563871F63668B8C38CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 23 /nu put
dup 58 /period put
dup 77 /M put
dup 84 /T put
dup 104 /h put
dup 107 /k put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766730045C2D9F29DC2BFEBDE5E7720CC7D825236F34AC7A9149BADF8C6
E9CA697EDBA8DADFC38902551B2503B4785C882C5AFC9B93DE4C848B302A2AED
0C5098975201546ADE4341D01A0DDC42D5D3C4E89545B2EBA508F249FAF4957C
58AF2D4F767139458FB22044D6B205E43DBA3D5B12559409828036282EF0CB6C
72DA11408FB563D5EF2553A671112F245C762CCF719E3B074DB44DACE2E0B3B5
BB3489D840924F78BA3BAFA6D5A7BF18D928B40C94E05ACF2D3FEF99E023E6B7
54D56E5E4BBAAB6D5E3ADB842AAB625D4A8F7460B2190ADD767E2D9D172522DC
92091653B600DE2AEAD2A9CA970BA3A975F112426BD840C44D3A9AD37B2E2D1A
4DD94868CAB8F013B8401E8F083A53051E1043A244586F860485F4C36EE101BC
E86C4E2CBED7F1DA1ACA247E844482ACED6B79ADCCDBD5F0842D75A0C1EE50D9
84BE7B20CEC86965982A4C5985030787C184DF95491FEFF69C35FBA59803A984
C47A3A29DDF1626A05FCAD585FA33AF85A68907B76F29531890B8400E8A19BF8
4966A8A2F09A15DA205643B3A4AE3DAA0F4566B9588D34FAF896232ED35ACF05
BA5A43299BD2B74A3128C6C3F8B6461C3CED4F2BE53E726923B6483E28420AF3
312D96713B28273F4C73A56B61DA3CDE61CB239FFAD9F9213EAFF09D51E3F48F
E0DD3C38364AF9544DFFE4EF9F021E421D3D33B86002590840CF2368E6371288
E2D88649391FFE4276C990FFEB4A54236F4FC669A0D4CB83FABAC9449D364040
8D16A00C2407FC50667AB351559600AEC9D919117B0B09C98DCF0156B1D2B82A
970CACC98A7D1E30EBF34FE597BEBC7D9E2760A39263B6D88170FBD1DE3E636C
56D54A21B7D35983FCC4AB8B4ECFC608E7363AB918F15FD93C2CA5D7562220D6
BC2BD0AC31587A034C39D816DCBD0B8958F29D03E62DFD687F358B46C15A8A7A
8AD891B43A4B5C268F4C8E1CAC825E4DF59DC52C9A942A3335C8EC6CD674B881
94B53B2D7E95A39951D97C8F2C5F39BC6B5BDF2F9E167CFE455E18D7CF709B8E
EB2DFAE6D7A252439CE258A2D4BF1788FA0BE744A41A84B06D3FC6FAA40F547A
05DF7066FA638717E7E85CCBEEA159D8CB524A457425DE649652DA0CA6FCD393
0792857957CED87E3FE7D74E04672422C8063EB9E6D88FAF266F656CD37EB5FB
F0FF20FF57860B74CFEFFB5D306A8CA3289C017C093C31F934BD2A7BA7C381E5
4FE3F7A2B84E4CB91031BF84E6756A50677752165466BD4FD601D6828B857214
3465EF2BB5680117A77F762E020E37361AE8286172026A6DBD8838EF9D1FEDFA
D7E65CA1547837CBEA4B577039F94553D9C17F4ED3A0F70AE047FA54C411BE3B
3DE256FB07FB533E6B184E74AA46958278D14A267A81AC9E3CF0EFC63DA66F5C
6981D043FDADB8691BDCDE498A7BD64B83B758299FC18A6440A063B293AC9038
50AC24A0C3A93A76F69FF70EEA2EC00048A7A8436EE8B5985CA7471487A2A8C2
C87EA7BE016C87CEBFDA95D9BB46EAAD51B2B290F1200539320694CF04CF31A6
F0F6BBAB3B39F8F67DE260485C5F1883EDB288DB6970A655D28AF5B3F4722C8F
20C333DDDEA6EE3A83BAA7BE25A1CD15BD41C17B9B1C11F531861D2197F7FF52
269710A9370898F7F2286322FE3D07C5E6FF89E611BEADEAF096D2D1682B1359
3F48A14F1369BEDD91B1746774AF11157C546F3C64EF67F8A205D6BF22CEB8D8
FB96099A43AB34B87B8360D8282B778233E7F4881BAA20395FBF2BE12ECB2173
EB395092E2693BA27C4709B8E6ADA0692EC5717AF1929F52D056F004847A4ECD
0A39084821911788D349F077FD27B5C2D3F103F5220459128087D81E8182779C
491FC04FB0C4B75A761704ACDE53FFCC6BF1362574B57A5FC3C7E2E072DA700D
BDF38FD12925E7532348C08CFB0433CF2BF017BB2BCA712D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A7720697B908266F619EAB1AE084905
36AD29AC3992BD3D77682CA8EEC0A297C9D4F167F3D6FE94EE31C80742E74DB2
0331C9E1C649D036DA3B081DEEF6D171EFCA22A3A0D668EE3121032D3A55BDD0
2AEB87D439107FB3778AB0EC59689768D3EC943D49A8EADC779F610C3087689C
19E649571768885043E4F830DFD2284EC0F13149DBB052CF5DE837483212EB75
BC835C43DBAAA0F90F572D4C27A9BB1422389296D8F83D869F56C361AD346637
04D3246564C7FD5E57B2B3DCCA756B93B0EE4B498DA00E281EE239ADAA06FAA7
8737092F47C4F5C8A89FBAA57B4933258DAE94B7DB285BED83239995A7702FF5
5926877F16943C6E16ACD3CA99962D5FF3081ADC8ADA5D3D0EB4DB9EA29FA542
CB83C87D090E04997FAA25C67FB50074C2EC0FFD439330EEE9007BAD868DE52F
FDC813F580910C422AB1386256259A858F6045B7038B151CE7DB9E518BC47827
D297615789382110163BD6A91BCEFDACE82E0BFD41266BBFC3A368105943CEDE
612C74434F603DDB68D0D97E4FF71F3E508B0E34C6D2606A4B760DE562DF10BA
6186C7E8251D2D3848362AD7342373D4E52A527DDC93BDAEF843B762BDD281F7
19B699D78177DF56958D8C5BF282717EBA30ACF377B840B2BE0E5A8CA54B43B1
5AB803F1237655EBE372CF66F342C3CCAA8E4FB3BA34DD2E646FB4243154FDDA
11463D6A9DCBDEA1F0AFD69BA2E1760F73E59FD3895787CE65A85ED1BDFEB0D7
F265287945B0DE47D1FE5A30FFA8956A5771E8D325E4F0660D6E5AC0E344E07D
DCDC6754D488DE30960325107F417A746492EBC588A756A598AB148154D10052
77854F009DAAA7D85A7E68C3F7DD19C4A4F95293AEB70F458906D97A42531D96
011E918AD9CF6A1B1F7B5FD68791A864589FA6BF2414B32F455DF1665266BCDF
B722CF4552D59C46B15D6A973770E31C7A36FEA9827479170AE5FC346D6557BD
6CA3C8782521314697ABEBF510F5A4BB075F70980191270EE3BC49C1A743DB71
A6E5EE61FC25482A27A59EC4CBA126D53B0FB569ADFA910C9F062440FCB7A1A9
2F39D8053700BDDB4E2CCC7FC7CF044893EEF250A1AEE073345E7AEAB4EE2D50
2C5E3530060C9383278BDBB0B6673E366AF3DA8EAEB5805C2D4514557DB3DA97
11BC580EE5745FE8EF40DC6AE2928BB9D500A0361C7666BA33761FAE5873A213
ECB41650C7A87BF1B8E80F630F90DCAA6B9CCFC41002EDE3E49861FA40352820
F2ADC6FDEB4548266CEFA2DAE1C7D28F9D2C5D6994408AD1128C9EB5915A8D46
8C8E04EADF9DB4946FC82FA2EC4D219FD974FBDC573D00544F9939B2104BDE8D
FB16F9340D25ED5EF273B365BD839560F0BFF955705487B08F98C36EDADB9CFC
98D84FEB5C2E346BC8B662B51A37437B856D447C1B6A40A3AE9E7D753F853803
E38C581C9DAC737C05B06714179BD2A373B7D43F17A296EB73A833D13CECB02D
64B835C2F5AD4A686AD1BCC0E73F0D4AAA50E2C4B396D944701873DFA20B6361
3DBC4D26D57C33296B8A7C6511F5A7031E3CB3DCFC7C25DD5ACAFCFCE2C5EB7D
6E91D6B9B76F3695B0B01BA6778D660523D16CCCF662104C8DA9A9583C81778D
8C604648651CDCFEE7A97A837C0588F602CBF39D08F3896967A4019F59C5DACD
728661B3974327FE718A746F2F38F2739375602B95CF2BA78D48A585ADC71355
6EF591E3585874F70E74AC552A601AA5B3706DD4615347D646C63574EAA9530F
27927C4F10F41FD958229846AE10AE5316F3CFA69EBD674FA750A00EAFD22AA2
C64B198F24E59A81107D7A08A8EFEC8AC17927E66F6C580A81100992285755E6
C26CBF982B939458D9D00E4D1E500BB76ED2C509962EDF958E7C4E6FEC7EF998
C16E7486A30B1535E3F165C96885001F3F5C4C671A9D0B93E9A2111426396077
18C34EACAD511F464ADA570EBEBD3CF5F436288818F686DD276F5D6FE53A6685
C164100DB0081DCEE06C9BD253224A97DDE3613E136EEFD5EDD0EA8252991A78
662BECD5A707E8DA8348168D7383B259548887BB264607F6FED6123997645A39
26159A4B8CC353E83E705D54AC82DA853CE3D9529FDE42E218A4437F1089F1F1
2EA493723D66AE11070CDFC378F5C00FA605D2F9DFFA8223B03F6C225BA8C865
9792B456273B4422C5993731FBFA0F564ADEADE434B5259AA4FA047F533E30AE
6DA6569DC675A8D33D6AD377F999843FD6137D287F493072AEB3B74487C76D80
3623EA384EB620479177B4CB04E27933E7E5A25555EF5E659631992A70F5AC55
454ED3FDD88BA73A2191A3803EEBE036BF45A182CB36D9C3924663E50C8F12C9
C91498BC7EDBA91986ADF2C2EBF42BA0BED7B8C5480F356EC5DBABB0613157AD
CC999D24F1EE8C2CA4A8D56C8B0165BB593B8739495C721216606D644D44361B
4C2B70956BAD2F67752993C0246BEFCA59058620D20FABEB628075CD3FE43F70
52016A4C72A6A1CDBBA625098F8BB3386ED6AB7294AFDC13C3257C6FC4CF80D0
FF918FAD8DCADBE152407964333726A66D12C71AE8991338E5CE35B888036FEB
6243C1ED3223337C75E7296078BFB1C4BA3248B8E9F566478C522E1FB157615B
62AEF4155A50A03B5D6AD11645F44995E2A174FEE7F87BF0C78BD17C233D992C
02C264A3E84DADE7DBE7E2EFF13DE66AE387A01273C71917EC85B33AEC147B3B
A8FFF9B1CEBE18C61D53C386A53E3314FD862F465C8B54A63AF294F324C9D1D0
83F2627BAE11CF12DFF0828D150EB95329B5EB47BEBBEC55A9EC580636317EA0
1A0FC4D795C55387FA69F268D68578CFB30DDED98C5C57CC846C6676F17CC613
85772FDDF94D4F72E4D71B98FF281B4F281BB08566DC1E96023D3E458BD35B1C
5145742C55D97F1EF46E6A60BE9217C25E92028CA6CD8B3FB7792A63E9580A8B
3C3CB031959BF559D2BDEF0C9B6B6B91DEFDD23A86E6541A3DB6A6255EB8E2E8
0E0A5324D5A75421D6FB582123EBF5E02083116B1E340B39006E78E1E729D634
56D26A31183F3A123C6E267745C911CBA529C5CF8768A1165D5607A353568DF9
8EAEDE0364139044611DF96F768A3CD60312142639607718C34EACAD511F464A
D38DB1C86293C40A95DEC2AB001F03E1AAFF81C66DE29110CC80C02856A3E5BE
C4C497B0CBE5D8D19B5E71E4AC556E4644E666621662842208AAB675E3240832
F4578998CF1A78E1C383A70CE568FE466D87679CAE81DE0866EF497D16DB802D
E9BAF6F1D488A9199AE153D1034F27278BC393A6640D1BD75BDFA91815032D59
6433B3811E933EFE01EB85E6A4D113A9D929DF5006D56BEBE3BC7D57A1E913CC
703299D66B44A281723CD3C192805E804D018473FEEE7B24ECDD666CE08E2A62
4953C121799E16C206FC306E65BF7DA50F3B1BD434FD8FC6EF2A79A4B3FDEEDA
94D57B1DE869FF53751328E391BA09D1A1827B4F3C0A46EBA0946FB6D123E957
39EA28E0307D8A443E8D8D78F70AFFEE9D5877AA8BBF8648AB73F66798B063FA
07A6AD6EA024D9A28646BD2778EDD7D7FBE6B5655DF1DAF3DBA5F9D6063E18CD
20852B1CFF8E668665C04306BA40204CFBE42943B606AFCF57E0F2306B54305D
A0D13042DBFDCD498D3C430E2BBAB97A78A6DFDC8727419FCE43255405F74225
3C8AA87466BB5C0898B4D96C2ACF1EBDF5E67D44D8941A9674322DD815E7E224
E91E1C9F5288A3D9669DD0C5D3D6ECC7F89ECF011F7EAB4F70211B52F595AFE7
D4C10A4C09CE75EAE43BE62964F052BEE122C8384AAC90CF9E223E9B2514C19E
9CB047CFFD5BA2C48B921F82133F43F762533F9FE2F9E9EE5E3A2EABA2D7875A
5C73E386B89C7829AA330CACEF7530A29612A462C435BDEF28270E54F4BA3F24
7F1E05F8FFB6E0248AC51AE9165561A2B045B2888CE2308BCA2AFFC7200B661F
ACC93617117D54E39521E1028D33F5E848135C62CD0377A78B2DF2FE325B0686
3E63D5A23652B989229C9FFF5747D427816745F282F7CA3D2197D4546772012F
8E94140C6E7B4CEBE28F217D5DF243A1FB7F88C307E704AC1DE8C724D8D515C0
7A3444C65EFC6EF5F845D8896FE4E7CC7C7BA5619B975C524B96C224E1477773
E3A2C13ADBCA40477F32573BD733E0DEE8A4F5B8BF9792FC41680B655133404E
A58C71FBC8CF0D153A203E58207099433AC37C9A52426E266D0ED1EA283F58FD
F07E1CCFFEE1C28B56204ED9DCE3E7E22F904BD0E9E9307B675A814CBFAC2A71
B380CF72ACB1484FBC1F341F73E4B717655C44A01BEAD6AD931C1141F9F1886E
5249B2D89C2949FA02073BC4FA146DD1EEED04350A895A36E612EC667E0007B2
02E4A68D9C51734F671F3FDAFDB628227C6E42371E899DB450344AFEC68F3016
D0B6F8BBB550CEC52E6795586D2366D8F138D9007D52EDC506C46736B3D0F2C4
A7592A6DB6FC9B6BB33C291D3E054934D4FBFE78725C804C8038216792799A76
206DA5C242F26EFC7F16D95FD015B61951C20243D05CBC736903D5EF17DCA114
ECD6D83B348067553050398E8C61C75115DDD74AC44D10201126488BD16301EB
F80D988B018FD41303587874D9515CA3DAA1159517D1805ED4F2F16DFAFDB92A
0B5EB0B39A6BC253AC9AAF4D632BB23F86FA88D373B314E40004F2B8F5693B10
FC1CF4032B90B0B6722BE638366D4DD8BFEE79EE7EFE7CB4B23D2BC10E50BB49
73C6F6ABE55E58A9EF6D192C2343A478FBC6189C2AB2CBCDFFF4C3304227C328
8E3293F92739BC4FA3DBC0EBBE739EC1FEB40DD2C894A45AA541D8CF55B9823A
B91E0A54E59A4347E537CE2FC71ABAA6E0D3D9007C6DBB2E928A387C4D23A7A4
F543E0A2EC17BD6FBDAD3900681A2F346AED2420E58DFF46784F4C6310BFBDA2
645D0FD86AEE2C71B0D7153B93C90B14D2A9ABB0E86BAECAA13DAC2D1E2E7964
1D7AF31066A1F5C9429AC61D1B38F296BB82026DC6A0B7E2173745E1899670CC
4B02140158EF0915F06FC7E2B1650C7A47226C1B0D8ACDA770B6D37FAEA29EA5
9C0F040CF9D08057C9C823556128DA858D559BEC099EDE4DCE4035BADB15F49E
1DCA56E5532684FB8D0F4A7B2794AEA412768D8B44B2F1FF4EAE6216C082F28E
BE56A4D8B13DACEEA0E4DACA3ECD9AF6A70C34F6B63A95D0FEA327DFF5132E6D
C045AE5E71328C9BF9BFF91D9D898C2B0565BCB6D1CCDC2BBE3513A858BCB6AC
F4FF5B681734FC7E358DE1CC7D9A75E9F4AA68E83E543A525AFA1B2EA8C68918
DBDBC4800B7B978FDE27F029BC54A958BD373870369998B80F70788B50E52B7E
153C354CF06D474671241A61E60DED771BDE14ACA25D2897FE956FBDAD571B1B
646A680C4C9885C1967DC8D49C6355A926F3FCD9F2CCD28C3F1A7C87F0B8C205
64BBAA8D379093C76A76D75A38C44652324C00622C36D240C5D96FFF4A23CC6F
AB0DE4F8B78FCE9BF97A619D424CE3C918A334BD614EF2470B36B6DB7B0BAA38
1F0B108A1B6AFB8BB5FB7D35D6A886CDB951297F61411BAA6E382568846AEB82
52012AE2B8CF125673EE9307549F8E32E33FE1BA0754F9F895D32EED18FB984D
CFB3070691739E8377BA19A5203A13070147553239687800B061C275EF00278C
493ABFE371161FF04167F0E67FD96C8FA33E8BE2A5981B6DCC687544EE3C1294
ECE75FF8D37315D4202AF42CC32C491CDE2B42701DA85028690BBCE0DCBD1878
F274A2ABC15887A443C952B0A2E8C4077DB4CED96A6E901812994DE768C869A0
9406E5DA8177D4693434367F8795669F1B752D2053B3D07814854A791FB835E2
281D553FFC97F6F1331B1313D06902D0051AC67AC2632092CF95DCAA4CAC9C5F
0C596DEFA2B300E5498AFBF866DAE443E307F734FA08AEC85ECE5BC7411C2B30
889C632D5C05B341248C5EC3CC2CBFBA1A1512F336A824DFABC88DB06E31E3EF
8C1477C75733EC02F29CE209E3E7A0FCAE48CF812FE1C1E93EEC7D4064DA9182
268419A5B981AED053E4D479FD37C575726180DC2039CE379BBDDF7A1061AC84
461E2F44554529C26ED6D62B244FAF3CB42599E9EF298A7ABCA6F167C9173ABF
C51EA0DB98E928FA574891D4C92B79147A7476DAE2FF16D4D3BB772D7CD0FAE1
03F49744F3F1DC9142842A7270C4C7FD6E470BB95D213C999B36BF238C0C4549
CF89CB03F2FABE65C4FFCBDCE97D24C28254F4A7A2F82A8A628A291F7B7DACB1
65BDEF69C0DDCDED8E9BAE8A7034B63EC26ECECCDC65CA3C0F7C816813DE220F
D68D1E5F02297D0C6D50720D6364BFA1BE4201511C31BD31F681219626C8FD9C
BF7F0D31648924230FD4D3FE4C32961B1B5BBE46C59CD279417749E053944FC0
47F1079549BEF30C675FC965F9C9AE0CB0B77C77727ED9A508C2B2CB0A8E253D
C0FEF68F13EDF9F6703645C22C4F7653175F8B9049A1D2B30A81553188B5E5E2
ED391D691766E4A198030923D72A7543A84DBBC24ABCCBD5FA64F0903F20544E
0D5283C7C7C542A7156BE4C2E1A8FFC02B248B6665B55D42F2D86B27BC4A2720
4BE3E30E1D7D90ED0170041D73FE8F7B8702BC64841BC9B7B2658214A6D5D52D
97ADFF7240CE0811225A28FA9F784F3F539923F9DAD4A3E47A53217E384E0AF5
6E304C7BAEA8AE7DD09D090F6CB8D29D3F93B9DE95C90FDFF6429109D2DEFBBC
529DDEC4EAAADE961B604C266E6C2B6432CA4058BB3B02C85BCFEFB853366536
B846AB639D15221D5983793DB9E52A93D725CE43065942B397F0F2C6B5D27A5D
3D3082F3D4FE72088B2C51E8BF0DFE03973C6464461BA72292472C27FEB9FB28
B1B954A93902D84396CF3A9EB36DA75088082B6046D91F108543F64224BB1619
4D0D05C3E2941B28ACA7F472BCDBBF7E0FBE8CCB73674AA83DEF26614F9F13C6
822FDECFF5AFC8A789611FAFA86A47D34E04962C501FD7FEF13227FC036A22E2
BEDBDF6CF368FE636160352D3E2A349BCB1A15ABDBCD9CA6367233806CCA3E46
9083D08824129D592215A318ABF613AD8F6BA8147E3C90AF2313F595EE64624B
35D22FCA7CCE9A67D4504FC1B9C5E1C6D2933010DDCABF258C395570670CCCC7
F392CB8534D711D0D792FF2E8F498BA5FF515C77D78490DE12B4532AF24D5D2D
E26102310CC7DB81319C0817B39B9A83EF7845814A253DA746B96C3013D38EFB
1B7057BCBD50A5B55EB9DE086528834BEE3A0F8BE60219C674DE9C4FB2539884
A1B726C4296786C9AF5A6CACD47A6B64C7A0A62A68CF8A14A6D5D52D97ADFF72
40CE0811225BDE146C26010439D005E1F9CEF73345BA79148E2780B7FE21FD7B
2C0F37D102BDF46805659841C1C4AA6FAB75AFFBEEB315F71957F9D2561CDA54
E90FEE546C0AAFC0F22EE3592DECD3A23016F588705E1F37426ADC2D8B73651A
4AD689BB4B09780F2D9BFB5D722DBC4BF718F8049D9E62BC7B0BE5614F086806
2BD9A18B1C274CC67000F63CA5BE48103A21BF4271914328DC7AAB49611D7CDE
25DE24F38A8574D46E98508DDDFCB022041211476DD43ADAB75F015150434EF2
9260504DD2A83DCEE4B95082A10E8E04BE4071535EDF6AA907669168F47232C0
BACE9F8EBD95EC10DC819557374E9FDCC6AB0DAC13F99EECFD647AF7B2FB22AD
DC2F49417E6725B5F1863703E0EC5AC62E5002D7CC403800F5A5A1C15373DA24
17F560AAD8F7A6AAE3B5328B71D341CC58B12CEF858CDA9082C3B7DDED2E4C25
FCF2F91476B4495F95F778399EA82CEC813A8D885B7BD9E4187D8DAB249BD529
5A90E30AD6E402433ED369890C032222B2EA6C4D322CAE91F48B7FC6E647609A
1003DD1F03F104B4B2DB8F0E5CB5F090F7CDBE192213713F9A898B651D7F43C9
BDEFFFE0A19F5FA06AB29F4A0504DE8945EC8E64AD4BE96B3140307F2F2A9FF9
553C32A51D5E33F0CED9BBF86A457CA847E989B87DDA95EE2C2CB3EE5241C75A
3E4E6288F7721741FB17825F125F62AF90BB92A0E91DD20A80B627570A59F0A7
3AFAC56C7FE953335742D51C1E995DED0FA6771E3F875F5ABE95A2ED6068756B
7B00A3527AB0D299D17920056C5669B7C10321AA1103F5FE36AB54C71CE464C5
A519AF0D965A0FDE2AE553651E0F0E0B92E20F29A103DA1F869CFFC3A50B2DE3
3B535AFA7D8DD823096E8BC7B58DA2412E6FC15473EF776BCD1DE4141CC8EDE0
7493C931044CB10D4F5E8E6D3E0FCBEB1AC2B7AE4327444C5C2EE1F17850608A
359B672BDED92CE89FBD64F7A9359453A96331BFE725CDA793F6108842C020CE
7D49E14679C8D21B44F59080BF7936639997083972293092D9D431786389E89C
ABE65BFC831B8BE5062E70F9F3355F7442690E5DB75D1EF38AC69D707E378E7E
CCE829DEEC9C35E8185581183AC47640886D95536AEF83B33936B47019F4B8E6
142FA206A4848FD19408970447A60A903D291F4FDD9ED3C0995917FF1316B91A
F7655F64D923D872FCABC9F5F52456C1F9FD8E1198602B07A40C531219C0E8FE
4147E68236BDEECC209092F9FE67008E94E9B438A84377451087E04D22114BD9
4B65CCE07D9551C9B0CE338CA8BD8D5CF0D71FBF7802187C22DC9FA2E27B6D76
4ED501A6B1B2D5A89DC4606E7021B040CA575EC3FAFA4A0495CB2CF6F6450937
771CC1521B0E4B743BDC76D2063018909B4CA2D99A323F46E30B6110BCA39FC6
71837D358460EC9941942B10206BBE5A33086ACBD17FC383CE66B0716DE6BC5E
10369BEC1527B9070A0191C21B44BF5BA2E45B49CB8F5B2F49398D47E74FE2E4
1F3E9542C90AF41B2649995FEBF697768310F537D16DD46D472602C227B9FBCC
3BB3326E18E7CAC65E1338F0F7DCA2BF2CD0F166D1AA1AE75E0F682F24890DAC
F9B142973FA53DAE4A94E543E3F0BAF1072CE3CCFD9F43D08043A916F51E8DB6
8A8A97CB6F6AD8C9245144491935D1908659F37978A7B31AA85083B3C145AD5A
C2F89B28301804DFB91962B7206770A4578C7B95036AA6B0EECCCBC6EA169B8D
5D677701883FB8BABE3AE95EEFC0D703E02FB5314AADA52E192665661FBD6841
BF718E3B22AFF685B67FCB78FFAD6ED692185044225EEE824009D3950AED31E6
5FDB2918125BCDDBD50D0D7E8214F30327AA81839D88D651C0C6D3683FE90021
B03E9EAA416457170CC28A2F87DFE4D393CB67115949A99E26C0F9F8F7181009
5C85461F0AEC55141E91D31B27376C5CF78AEC964FC24BD51DDC06B0BA44286D
4FB4DEEE7EFB11D548C56316818AF649089A26BD3726DBB3CBC53FB8219D8237
06D47650F83C296A60BE827B110CC04BB64B51964A0C807F4BAB602A50FD54ED
78EBDF9AB31CFF42FE6B4E5B7D97C848C3D061D8D514095FE4487251B09D9680
F0CB97046C2BD63D85BF7B6D19DAC11DA43E6140D8D382C8B196DE9E61C25907
6137021A5E0A63E5C98116C90C7B21CB13B7CF53983E67FC1E1E54A9DEF9CE73
1E6834D0AF4007D010E0BA12A16D57BD72E6F466832A8AC617EED6A1284F2D0E
9F0204EF506E9B93D99B2C5E4D403B9C00A983B4F9775DF1B546DE11705B9C8A
BD0E1D2F1D95A4D8A47D0C7453A67A99FCCA94BDE5F22C26384948F9711BA80D
25A1577850F1E2D47744D9D2313D1DA0D4706EC9DBE3A87337931306813253C0
879DA8DC28B930C3E81546F7F481FB83024FDA0443A5976A17E4B002F0D65BCC
310FC93A9535C3A393F67DC710C942D16609956B59A5EE2E274C2FD856B06FD2
B75AC18855BFDE953FA6A61AC10BB3AEB114CEFA9F875DD0510CEFD315D3C14E
027D50253ED6627C5605273C5537CD3EFF1F4DF93CE783A1F2BCF9A22F9F4E99
B0FEDECB92FEB8D71B7550F9106F2BA40FF0EB285FDD3B480E0AD39436A7F0E0
D205EBCE882798084F7F685ED8C783F410480943B0867D797BBEADF7EA01BA85
B214C79629B7C65A4EB217FAFCFA936078F7F9222F3CC09C6408CCB7D899C818
BC6A0E2131742C462F02DEA42DA7CA9077655DC7D7D2C43EECAFF0A06E3AB3E7
7D47BE66CDFF23D90A37FAD95B1D946AA6C8BF44B567263F9958B03F430FA400
5911A944CCDCEF246E2F439A9D33A6C611AEF9B26ECBE985067FFCBA2B6C371C
8BE8DCA56E15D6E646EC342EF92DCE4D59DA9E7244251C0A670128832E50E70B
5D0C5BA4B4EE771AFAC1155DB70B5979E5342721CB343062773B8D621B23698C
627BDFBD753ECC7B5664999F2421960A9FE0C835F4EE540838A585862FECBC67
96AB43C54812B2A325F156E2B7914DD054D8588EFC404EBBE28E5B7D899D8F07
1F91E163D9CBF9BFA71D8595A1BC012947096342BB22F84A39385CB97687CE6A
6BB0307779CA4BBD7557603585247CE44E585F4C8CFC6D613CB48B72AC255EA3
27F0CB185D005815B6A534B358796EEE36EA9D19FABD55BFAA025CAFDC12F2B8
B89114540A1F3ED3F0E38C577538CBF7FB1A84612828DED349D6860210CD2A53
2D7B3DB7ABA88F67E4E6FAC751E0C08FA189B4A13149C62DDAA7027EC65A552E
619D0EBCE77E63CA0862E5C591E0054885CE710C9F4E73E38C7AC82B451CB683
3A5F6B2ECA73DAB0E8784A5B2BD99978136DDC67BF51CA3A8D35BEC329365132
851E76327DDB5334C457574F60E61F9D31A2C1CFACFF4F6745D326BEF43FC3D0
EE6612184ED11971D401228E586694A335408E30ACE0C6CF860C31AF9EBE0034
53658886921645582A7D27179C1327AD276C7EBB7717EA105708BC4BDBAE8B30
D638DB6576C5F8D7C08B2F81E2988C8509D8BD1E3C57D830F1F9FAB31AE979DE
A58D35DBACB958003A15179AC9211884A5D6A42025B278EFBA6664856395865C
92AA53EFAE26EA96970FAA675BD1F1DBD7802F663FD46D6C80AE2A108609A61C
77639112185285B9E8AFAAFB891DB6C8488EC6C334CA6EA3F43D5537FD966593
B1020F2D007F80A8E5DF5D70DA0B46F76FEA5A571E74ABF75AAC008DD928FFA7
57C9FCEC39C023DD8E36C6B0C9F9A55ED32B1302D1C65A9CBA58CCAD2F9D4B47
9D6165F6A14BBA596E7F84AA968B4513F1A4C0D062E4C2500D5E50634A4E0742
D748EC7A3A9715E9765810DCC3E3CB5D9D2560EB668162B839EBCDBBB5DD5FF0
767894474F655FF8C7296B2C5D6EFA6A04F333DA34B24F5F7D0FE2962C45FBEF
1EA77A56247F53DBAAFC709729295FAD59EAA6DC68DFBF3D99190CCBE820FB1F
9C1C84D51BFD8DF5FF6083BB9C1F70AD759646E7E6F8221612C242352B3B7A69
483B2177974A93911297AB79456D3B22E9C6092E9093E5C186048B3E19AF9BA6
8F3793EC00D74FEE8AEBEEE9BC683167353761C3CC242762528364EE119544DC
459A90321E1A1C9CDEF38348A0E756CDBFB1ED342AF400984CF20DCBB953164D
0D68DC84A513F352B24D4CC5AAC0FD8C5AAEB09EAD831F25BF86F73AB750DD49
804B0A794E25C9B9CF49F1E258BCBD50A5B55EB9DE086528834BEE3A09ED0F55
9AD249F0E79488941CC7668EC6C3EE51E708E4AAD408B304244B353062263AE3
95863F9AA3BD84E919FDA2BFD79F8F38EDBD0192347701B257B6EED1D0A9E468
889C9BDCEE276260830AB5250B8DC670A6D68AB6785F9D59EF1085D0A7F701C2
60659D36ABF1286EC9E2305961546D06A365FC69EA1CA34420FE07B150D25BFB
1CDF59C3435AA0E0DE308DDCF7A33D4CD50CF39533EE066D22E67920426FF193
765CC2DA15B9E616AF236DFB475A8E668485BD05C40B34EA3D614134D00638DC
06904F068593654852DCD57C62BF76865138859A8191C3BC291AB473A00400C0
D2161C45AB766A1ACBC450809B2734EB9A070D3419710D6631EBAC2FA6BB214F
167916A2B67ADE09E45D741FD38942C57D0E5FEBBBC8675CE5722AEF2D994B57
5BD9E22FF707957C96CE51A5671EE4AC427DF82EA6384CF28896B00CCA4073DC
1061EAA6CA52A192C87FF22461BE8559EED8487BD81C6B2D74672BEA355C2D04
CBEC1DA09C5FEF657D7CCFD8957FAAC3081D9ECE88B51E5BBEBC9C780017684D
2D78B5E0B3E06EA6E0B12D93208D7CE9CA16DA61A2B7E3B574C68E477BAF861C
6738336DC6596AD12358BB7B5DC8670EB6567D67265B041F17D8E9264E8DB22C
5E531A6296B15496A4B55F950571EB5BC97E70CFBCE5EE116BE6596675F57FDA
B9365F736615651B8A93291DB2081550B057DE0C572DF6FB849575A8ADDCC979
94C7F7A9FDE0E88CB4411623FD7A4DC60DF1BA781A06B58C3DC440C65E290D50
E2AE2CFD4D097214087AC01C4BC187B9F30B5BB2F0D067A4C16053A239373D81
DD04EC726602B7A21396A756D64BF762988925B43CD44D32688EF1C9EA217BA4
97389FCC935859DDB977B3B331080237AAB4A3500D114F57B5BA47C89925D139
90FFCDB384D24E175921F2A96CFD603C275A1F76EBBBA92CE45CC8125496B8EA
949989491D8626C6F395D1B75BDC82E1D38B5171D26A8F5B3DD6A320D9CA98EA
3330040298C4B93D66EEFAC83C18923A0E34152899A64AD5B39E8DCF5C11F168
86D441A486ADB7A8C82378A0E5F7D87038C3B41F708E9E60F522297349FA18DC
A5D05045765430A7C933913CEF9E10EEFE9D34D12CAC4A52D627B5D777C70680
657236FA7469C2277C7B67D8C7AEE50065290B0827C19A46E567FEE4D90ADAFB
250D6CEC48DA423EDBB6DA55F1F20E73CEEAD9FEDDCC30DD000E66307DA379E0
8C1C36E72BA8FD823AA63212DFF11182E78A6AFE48EC469D611E1E9795875B2B
79686193A47675454BF1C1AA27857D7C031F9E8C1F302C930B87451DB848F95A
8E6DFD583AAE83A3E4D54BBD60C9A826EC69C2987EB5CDFC07614B28AF0A59B0
28CCAA91FEA4E8D7981890D166EAA73D002E3428BD4D8914F54313F10C98AAD6
24ABEF38224FCBD127E162E5856C3FD32EB203F46B2F3BEE0916BA07DF5F8C2B
C3A5CAA924783A4655484C072FF1023770490B39589A691D56753944D0BBF3FA
3361CC952A83E27A6E8398C9234F610B974A0CDD161BE97F79B0675B8FC2A38D
6079042E52D5BFAA30183056D5B75958F9E7C35B751D3B44CC1B55DD3F0F1907
5F1A47A08E8D7E1FD045E94416533F88A65B72DAB730340EAD8531B6EAC79B1C
4FE879E8CD370A78302026FC92968FC5A0DE355782188CD1E9EE8B39A18104B9
D0380EF02EBBACC04B154FAC3E522B4A47987EEB506EF0E157A3E4C5683441E5
802811471AF79E79725CF356762F0176EB23BF5A12D572720BB87989937753F7
8A85632C882CA12DCA7367CBE26E49BE5FE2C675660B850467868626F9EAD255
05000731573DFAD597669EFFCEBDCDD341E13F8293061D3397BDDE5CDE51B172
170B2BAFAD6F5AE862DD946C8A9504E26F6240554BDAB7843794FA1AC64C36CB
F528015F2C12A88487DB92BC63E7BC58F97B7E38DE7C917C781DEFC79B8D8F6C
B3F78C61FB3614B788F11213C932AA0E6BCE039B402213DF9BB3971CE4EFA458
927A710E23DD8374A9890531D05FE54ADFA42A86C04073D13EB5B1B6393FC901
5B0CA2F8E464FC6E82E56A6F0BA076684B2CBFB614D51114037546846BC96DC3
E56FD28AF18CB636FFEE11D9F7EA28E26707D3BE3B10CBD559D5AA9872656ADC
7A42EF9D885F0973C77760FD5A73238898A0F9EF2683A37E6874F1D4BE727350
777DE6FE633C69F0E17E4F87840A60791047A4D957D286FBFD34C7BFE9EE1C31
949F52AFE9B166645FCCE1C41B0A4759C550CE3946B7291FAC2FE201D2A9EBFE
7949B843D182941633986305996F4A96B97D7E89B6F8257C6E42371E899DB450
344AFEC68F345DB3DA14D79E285BAF06F871DB941811EA912CF36B7462837E82
1005F70710DF9C94D382394B921FF32AF9688121BF0C5B5BBB98A00DB787E8F1
25179DA4F5B51C2D9CEED71ADB119C4120D06F11537A60DFBA63F7A84C062F95
3F37467509C37988A9990DC9D061EEDEB01E24CA7F0447E6F8BC46AD9BCBC3B4
7E6DB9670712A385AAA7AE837C9277A2C4C1F2F5268E7965F838C1A870AF10D9
7B002AE9749617FCC3D44423F534302E6CB37095ECE0ADC5C37A72C8CDFB2C26
12D8DB28B0B54612B3CCC3A5C406687A8B82F95DD89EF43D478BBC09F3067A7D
3D190A27DBD3C795702F833754A8724B0DFBAF6EC60B24748177CD51634BA3CA
E044FF6D43B436EF546B2218A35BCD8679509DC251FF508B06F8AD9BE8123831
0613DB12106870701B633F2843807638D112A243A1D7F1EFD169F7240363B370
8C71BF34A93F52B4479B93C6F25F79DB414EF33F7C6AB9A279C94711C70E23DC
7F4F675EE0882CD6DAA547F7EDEBBE3D282FEEFFF3E58B99CDD17EFE2D721673
0BE7A6FC13C4EABB0D600E104D8398F131604F34AC303668B0CB886A9E4DFE55
C83565C28C2D635A29842448C4C43FD6C51E62C37119C2C4ABAB123643F2B949
6B3ABE516B72E82AEFCCF31BC087748BEA738AE0649C6F4081563B18D395E542
62CE91CA5349074AF8FA0D43DB318E5E53A7E3123DC7033BCC4063D04D6535AE
7158C584192BF22B56ACBFD61E9677B21C76450EC7DA18A22FAD95B2DFC7EE68
564D65B3D4A849AE1C5C2D856A65B9674BADF5466738C666EE7458CFBA2DEC2A
0C9E66873C4D15DE4DE5FE3A7CF276290101A89AAF4D632BB23F86FA88D373B3
14E40000ABD3F5FE699F33AB75FC753F3197223C9F01FEF18B279989483599AD
D0094FAE82569C51A320CEE50E975735863644E0B7B8CCD2F687023C8BE9FF6E
832F7DBE008CF0CBC1A6EF2562EDDBD193A5D9F712F452B52F885311D32024E5
68837ADDAA6406ED2DDBAA7C58C7D78C9CF75F1A1BCEB919F48A53254EC7BA59
01F80A8202BDDD3CA40653D40A866D57C4F0B4C155E2C9D0025EAB79C91F40FA
195ECE203D79E35634193CD294FA4290FF21C2B8B73A95828B4C1B5BDD579C70
617B9ED351776A817699DF6BE1D14397EB5AF7BBBFB4D4A2543D0CFD1470AEB4
70820950E0C0DD154FC28C7B1963AD2AC7E4D0E00DC1CCF79A358B9A247BB46D
F52185BBB1D560F97BC99FFB11CF42880ECCB4E8EA3619D3DAC56E60818A69F5
5BAE6D20F11C2B849BA59F70938A379962BE6C8DE637189EB5AFE313BED8A67D
DB17817F3007FADEA0B96583D4762A179A4BDE081A7A9EAF95016FF75EEC9EE5
D4380DBB9E5CF8DBB9B4F0911EF98C554E4B2DB620CB5E8460B31CC080077D03
7EA8CC0A88704723A9A49EAEDD6628D7255CC1DFE41B4359C89C36A10786134F
5602F5AC53D7BFA1C90AE75858286CF984603A986D734869992569E9AEDC89B2
8668A8A7CAC97723F69EA0AC1EE47E99E2FB22C8ABEDB31F90F21C4B8379572B
9A78EB0E95E5C800E791EE579801427AE8E29E4EF9997B82D0F91F6052CF8342
120C5AEC935CE23C401A55170F95D6191F328501999807460B62F464A53E3F70
FB08ACCB73E49B0ABE98DF6AB2776E06CEB751C69D15D03DC9298BF52567ED56
E189510DB5762C67C2301E3DE6321E7660A5B914E044547C318912D9C12702A4
9E5A4D9E2C9CD6BDBFCDF9A7968BBFC40937C2F4CA1441C630388F5D7B9CE2D1
86058814332AF14A0CC36ADEE81B884347255DB9EBB38BECE8BB0F652AA909F8
C89D2FD614D0A1C73129BA875C6CF26645ED27E08B62F127A9EF99E129383820
5CACB2605BEE33352421E79A5C0BA9C2858EC0BBAE6132ED67EFDB1660A6DA66
B1BA23DD60794C0311C0C44BAEB2FC42AB8EECE85DD3D9557CE129F9C992FEA3
42177750B0713E8AD517421FEA66621A561205DDD497FE885DFB7779A77595A7
2DABED32150B01CFCA12533FAA20A211D4684B7036B29B4336402CEA8F7D38E9
07DECA0181BE6567608076C2483ACFE54AC457D222E2D273E892AD56261C46E9
162C0F34A122D0310D7835D5548FC8C4FE74C69835A31913D0E544FF6D43B436
EF546B2218A35BCD854B855E86244EDD6D0695CBBE6677BEE12E680CEA481114
F398247FCBFAD11510C1B85506725640696B371DA41952760A1A676D3305B6DE
F1908A11690D08E28822E7347837A10AA5B40075DDE65BAE827500CCB8ADDAA5
F6E2178D61B632B2FFAB009D9E8F3BA7A1880E6E7856E029617CA09B5971E03A
E4C89DE493ED0DCEE110E7EE181912E3F9D2ED8940246590CE6A638EB42A2CC2
C3BA23E19D5E867EA059F8B21B332AA4BA88C8E9A459197BB73871AE628889F9
BD1A40746EEF85376352F58189A9757AFB867B901883B4FAB04C531276D46CD1
C58BD738A1E238B59E402F3F700309A425C675E4537950DF86F60492E57E9553
88FC52AF9EB2A58C88F7B7EC58FADEB7214E434723BB0226488B47A4B6C94723
65739AD6659502F90DEE4133FA9BB22DC1F9DCB3016C566B042554EBAF639ECA
C4FF36CC8D5F07444395130886D47B03A5AB134C2F1A743580231B6C049C1157
E6A25F9071E953807B39632F0D41F0BC328B5366C0A8A733F70000CDA74E1A37
CB020F8DB32F5ADDD0F288057173C036FECD6926511480478F1DB7AFEC5FB40A
C0BC1D4E7295E9C49899A274AC41BD4E256231956E17E2DB02824A6E7BA80F1C
FB288BCB860CE1D8272BB230FF43C02FADB55E39488AAA02369E70926E63DEB8
5D31FA193D2C3D6B953DA1D758CD701C3969F4228CB8636F21AFB1AAE50262C3
0EB44CEDA8F3DC1682784C03525D083AA29AAA0E3A664DFD1FCE9C39A3C152CA
1A1559523CDFFF0F3A668D5D76EC76AD9668A28B9AB23AE66B1C7862A9947794
ADFA40C8EE17EA56B73B3F2FAA87135BCC5ADB654B75B2FA84A4AC46B037F8E5
CE260BA60022D80008454099113020E412DF0177A396D443DFE7C4E523A441B2
6D94BAE586F757EB36250456C487E1E05BAA5AFA54450CA312C837B7DC70ED38
41C32A21646A68554F57A611531F44120F00FA11815C1FB3625D7511DD852CE7
E52212491F912313533AB5A04F8A95F16532092DF8FF40E46BC71082F0FEF9A4
742DCB095BE251FBCE81F238A10487BE7BB826A0231247752FE7FE13166E3A03
7957E228D6916A8B0CFF61165D2CA1594C75D28B255586D41FEAFEBDE6D1D615
7EF2453EF7A4E09DFB9AF3E8580B0415FD45E1BC9C9BEF4E5BB2E8D9E0467E13
7DE74D14766B6AFBCF3BC6CDF76DA8A4CC4A522E92625E32FDAAE648E92D98DC
510B01B9A0DC43ED4DE1704FA3C10D05F4A2C8F6E376C63F172137F24F0AE1F5
5C85669DB6E0EA443694391C55181275C99BFA3F4C3BB7E1407812925D192C38
7B2036592411FA3CE8E902DFC7489039ED3F8D4184B610220BDC8A8BBAE4E772
5B0DDAD2755C150AF8566A58B6AFA6E66A689B67FD117583E023736741DA6160
823823DF9F4670DEE3AA9F3213CD624AE8DAD5FD1070C7CA4681163828F52BCD
27E97349E068985C2E9AE6071BCEB0CDA9C59CEF58AA070174C3D2FA24AFCA9F
96B6F7D291FDC54FDC4DA85610C3D2BC64604E4BFA5F9A6824F70075B3473346
39DC3BCBBFDFD9DC5CE662F1BD81E96D8A5CFB159B499D4547E6937B4DE8A7C0
BD3FFE5B64C3EF636D559D05FF53D30EC8275E8D53D63147A207573735A6A57B
5C39A50A019AE26CB87A16406FE9CDE7E87A8034A740A95DCB16DF9742155D2E
452258B95B30B299B4A54BCC710144B9B91E7F93CC9923B4492BEC5DC3A5D1B1
747837407A1C939A375812DA0CC0295B848BBD7CD3DEF00E705E154D1FE5C176
AC8844863605B1FC5072CBAA2772F95246D82D4EC7C4819AFE5C3CF622A97B87
E9078B84C61AA0AEED024A720E4100B25C57B2C9036CA5C68C95451DD590F922
3A5F9489E87393CA27095F969D2A447A402D0F0B0C3EA02F182F13130C9B4242
0C568AC279B3A0B49F51A757934E592358DA02094F13822DC3B89900AD0C4CBB
879EF39DC9BA272A6DC7E23B441D593F59E0E5982521B61BCE0C523261E4412E
C3F92046EB57039770E74F2E24CF41063BB375D88889E8DA9711257823A6114F
728A9F2777E7D088BCC92BF4AFC1C9B94F51C3A02D3D19ACD44CAB616253994D
5F0C4C74A051978F4160858471CFE26F5360BBE52C0AD40CA43FB20105328152
1190B978155EF47AFB0726EE92E375AD20ACEC60783B9A4D7CFCA27E099CEA8A
1B3D6688DAF6846287388428C31AA4A1F016EE0F8B20FA99AA35776D47C0B69F
2A218ED724B88EE6EDD957D13C6A2BA014B1DBBB0AE12634D696301743C67FEE
7A4CAA1B51CF224DCAF17F33751BD552C9CB53217F5B917326E927B12F8912D9
47B7C4938E3E84DED5B2392D132DC7BC0BF50DE92F8C1A4F68422E4BBAADE7B3
08102E50A30F8A9BA5C7477E62B85D21F2E01BA4A593F339EC13EA3F17FDC87B
B545758F5B9426535B7C7BB003E0D9102EFC264EC19BAD94787A1C2541644253
C31ADF9478469190AA5FC8513E38474CDAF46818D4087A3CFA22DA2D562D85D6
BBCDD520F187BB3D3A469D1802C9D6AB5063E900FAE81D0EC80BE35644C5477A
D35264639DA516D33B60D83CC1F1408F1968F4B8ED6674CCC9AB9D5A2CB71644
2924058CD1D4078C000E77DF18CF0493B288FB4CB4E55DA707F1FB16849B42A6
75DE00F98703D709DC1BF04E838B1CE5153EBD11D54EFCE074A7A355D68827B3
C1F552276FA8F959F26C9CAD304CFB774B7A08ECEEA128568A42A8E39F3AE8CA
1BBF21D1D2B9C30AF7937DEA687D1D47E4128BD20FBDF48F0AA7B05A8AA736AD
E82817D3208D8894A86EE9E432B89E9FA4ECBDA8E24345D7B2EA9F160CFF29DA
F954BA46F29E79A74E94CBAFEA2876972B407C8BA2D5DE112FDF7C85413F9B83
6CC971C1052FB0DFD6566175F21AE54915E3032A4D28036DB2BA31C444B3C9B1
A4D28794BD915519D87B213032C56D6C276E62A556D3AD2FF04910FAEB2C65F0
BFC2EFEDDAFDDF25C72370F5C93F45D1BDAA0216A88D11374B954441E6A5FB81
634E5BE3C956DC0F15884D6F2C57E27F19C2B3C3A94A99FE8AEFA7B70610394A
4CF7C94C207FA4DE5E62BEF9D85ECC2262A3C6ACB7D8FC4D11E9E9AB664D464A
0DFD3A8E01DE172D1C189B2F17CF029A5DABA443C810DA20C0B0E825A61D5323
C3C3615D78B93891E29E48F7D859D4C3E68D089536C10077614029B4F63DCDF2
E973B3175E6C2455BB130E9E86C39B48670B90C58712DF73F60ADE67EA7DD2C3
9DD1969D354D5D38E5ED625CD7488C885DFFBE89FC512A9F05D93F78A23FE894
176E204D597630241C2E34B5B65305870B3AA07A386BC7E44E1314B5E5739C0F
30971FF20A420D08EE373785217BB329E55B26621C4E3FD50187EA5C15521A5F
261C0F65834DFD40C76DF166C41C8C4A8078F51C11FA085D4958CDCEE5F710B1
43DF8C5AA840F48001C9994B09DD6858AF613E23F1EA2FD6F833B52F1FEEC4C9
EE1F1B1E09D86031A0FA3F4D3720424E73F6BD0BDB89C1069C4CF9BF8372A9A4
4F6E764A918CC7D52A3BE445ECEAD78239518FCD8932BFF3F6FCFC3E6D5D73BD
8FF68BAEF27EBC63CE86BDD5E7A5902B373D38107A9442345094AD9F2DD748D9
13328095D0FB3DB969A85ABFFA51340362288B4D202D6924E322DC3FD7904448
3ADEFFB6A04DB7581AAB37A68FB11752BC1C3267CF42C302BB14126E68B37B13
98E736B34582C28AEE570FAB43912BADFA312F466A64509D991CE56745327248
E6D9C616A69F0C3F6E7A0D1781F9DF83678DDF3931D750E5DC7EB931717F1702
82D5F1DFDA947C30B309A1D7A619DAC6F5CD30E41EB6E938E516F9301EE42560
20080B2728204FF8E66E324F2EF6CECD556BA5801185085CB115F4E8E89CBE8F
F1D24BC34F49D301F4A5E483603297E69B26A0EC7A073551554C5DF1F1DAC92B
35BB38A725452D903145092320EEE1588192B71F2055C283E657C1904006C18B
DE09C4170A36DF69C8000CD56EBB34D4380FD508A4FE6C7AFAFE69B4DF8F4F50
55360A99F6A3A16F18996D223902618B4C8A417F7E3AFBB02F636B2A2A94D062
8FE18B84CC55FB112E18F526FB93E1C7B74F3C15AEE599495095BD2B6AFD7A64
D040000D92BAC3A103AA5008B8302AB07B2A22A6670AA13433F57C3FD84C079B
8A38B3707353EBDEE17622BBCC5303A4AB91117BD02729DB0072B6AF205F5D62
C8D46E3F8290481C578E4396B08E14BDDAA1A5A6F6EACCC60BF6A03A540C5379
14D1A965A2D52E6FE1B235427BEDFF2897331660EE4338D82B04607D9BCA362E
E3D21907F5826F3AB107A57B7CC947CA424C8CF9334D1059FAB4E6C23CD6F85F
4628C73B84BF99875B7421149D78E334DBD57620A18E529BE26C56022C4BA3D1
CEEC59AC058BF855FAEBD185B3D3924BA7B09701A170218B47CE60647FA39FCC
9B58438F21E059ECA24D84DA47F167298344D4D79CB2F46B1E3A9D07B749B95C
1A86CA441394084A696E76F732FE452A30C5426DD16385679E9CE14A2A59A0FA
697FD557A50979E260068CF89A7C1DF6FDE3F0A4368E709C55B1527425162002
BACE3858182753E7DA3C70214F2F28D37508EAA673BDE9FF8B406047EADB7DE7
EC11CDDD54A3310BBE4C429AB4ACAD7167E8DC23DAE8F33E250CC18107830B73
92CF5D77F98258E5613057A3203F83194B831F3E8DD41C6268DE637024C706EE
05D4B44F2E78E9946C7ED5AA121668454D3D3E2B348A9319DFD20A142F9757E2
7FCD7613F11B40027CD14C03DE1B9F79102168BCE7756D322AE8BA7CADFBCD7A
19376C8FF9FDF7A1B6C129EA3FEBE4CFBC2B5A49D1D138CF229D4F06A1D6BF6A
E469B8D0D143FFA4CB5D329BA4716A5D97DCE4997CEDE1C3A72A00BE1B127452
9043720D81A7E304E06D96A9F2CAEDE6F9B26D50765EFF048418978C414B9C42
7204996FE07595C520637629BC2ACF553ED94CF6C1AC06A6D3C6D352026D0310
70A87119D06F6C8EF1BAAC56B22CAFC5555A6C832C17223DA6253A6752C3081C
96E00839B6EF3CC0217466E1450F7F5092CEADA0EE9687A4DE861A52AB1E496E
359E7D4E7B642E478556BE572C41930691CA3A7524BE7D094E9F02FE73FCB369
403C3300F24EC1B5FFC7610F958878B701266FC238CDFDB2003B956DDB4B60ED
1DDC55E6E2BAF1E81B4A3712BAC20635A5C7E55403A445FC1B3F58C854115DF0
9FB36B587FC623E8546F2059D399E04351F9D9013C9FAE23BBCA2BFA8B64079E
BF3A4882D69A643907EFC8547B4DDA8BB763002C86FB487CA7EF3249E7D33436
457D2EE0E3B7F4131819260936AB1C42476C04724B484F02A41728ACE6B5CF47
F59D33D7C288FE4AF9A2C554E47050455DDC64337202D8A50C2EB4C0F2431524
EE232BA353C722642BE73F726BC13E4CB08168E407F6FAB84532D7AAD07F2E3F
72D527448F8C6B50D14BA73990220A0C8ABFEAB8C2020B16559A36FFE0ACF5E0
563BD766D56B8F0FE7863779298BD5036E57DD887A9F8B81B84BC09E54A49EE9
2BF61E4A93ACA424A71FBA2A5F1FB59635E1B3FA6DA617EF13F7D650ECA3BE4C
2694F72DEBDF081B7BA0A22002D3928721C61024C3DD868AE8B018C47C371C81
D60EE06CE3395FD323EF5333F79ED219D573C3A4E8C59184E212FB303446F3A7
D28A9441FD819475A598BD80D421CEA2EF86E93609F1D8C54E180A5AA29D28D9
8C8669237AE72E1A472BE5ED343A7AB8C48F46AA2D23629846EE3E61F8409A1C
383431EDC63BFF73166A2AA5D5EF21ED8ED2F1943E145E2C660D11E37E740E65
4C35327526410AADC9AD019330401A7A600674BA152D55869D48A9FB671B690A
08EDBB7CECE4E129ED9D9DC00F44CBE4ED3E25C94C1E164C947858EF787F5F50
2EB6AF4D33846308593F6F8D380F2AAA38B25097E51235E5AA98B8A116D31C1C
9C99800586925F7E7A366F8826470F49954EE4A6E0C112D160363646D167AFC9
BDE29B6AE9EEE7AA622FAE9AE1CD76C87EF702078106E23BEA34B209974F83FD
CB5CA6171F8CE0090B0658E7C3CED2EFAAEAD069B87CAF956019F4499961EE2A
30838416907F7925CB1A228229B5BD0B8DDB7B212EC245DB3D3DA4335A18D78E
1CBF06336B332CDA955E05509C8D1327D3F81ECFDB70055AAE8D837BC642CCC2
AAD4EDDBAEAC52488F954F12A652AB5442ADF8467E65133B02335C3574312031
6C5D2335B3769D69BE67535D7B5016620992934BDC7374374D70D097EFAF2939
1308B7BF9290036DBB147476D062CE9D2042D611899975222F97565F64587E15
C9A8485BCC19238E55EA6B906B739410627B324D19EF687FBD47DBAD4F6F65A8
8A251D712FF2CD2E73FDF6278E1A64C2A24829876107661AEBE0F211614AEEB4
8D26F506A1EDF67B4E0605D98AE8B9B5E4A07E9880B00D53ABC403CFDEAC836E
A1614F543E7F53335C9A63502D7765ED33EDAF5004765931D7C87C792953888A
339626BA6E61E7879787402F5B3D26C357386419E0E90F34AFF68D4C9877CE9B
8AE6D9BC6DDA5063F5F4A26DF5D5DDD1439D97C065A086982513D2161E376897
8671AE80CF3A25E13462D280B41BC754647B3153B8A44F0EA16618DF2614A612
E22C267F38037BCA14D0AB7F59F7E628709C81794E6DF74D61AB498B6029ADDA
D0998F53F2B3516A9553937FE149107E0D2F2B99402229BA35A291E0E2ED95BD
140A30ED73181C8CB224D93889BFD241AA22F02C2DF8173949CBBAF45EDC0422
E8930D149274E9E1411C0613EC8D9FD2201A188F899A6775DB58D2C01425D82A
D5522493ABA5E455824D2D8640AA907143A4422BC3E9E306E3DF284C70B9C17D
9D149D31831B830A1ABB48781FDD1605B33B8E3F7DE809C58AD1836D0415D735
71AC8B1B57AC6CB9690C05C5A9A2ED2B3E4155A6E7AAEAF5FCD75C206AB8AEB0
ECF21A1AF63528605097E26702835CE615A2FDD98A7D0A8D8D57D950527105CC
3FE2CF991EC6C0E6B5CCB2C97C6785742B2580F87D8B9810B1D6E6D7715503E8
87032F3D8CD3DFC301057FFAD8D736AA4E0D66A6A6B9897D6068CD75179D58C7
5B26151E469C16B7876A30379057B169DEDA4AAAC745095408E643EAC500E9B0
2325C3F0078111AB67DCE0045BB3A75691CE56FA65C57027AE8F65169D54B78F
A54BB371721877FEC8CD4BC995A1DD0288BA0E57734C2B7864BC684F333FA7A8
D96FA10FE68DE9D9FADD81EEFE95BB9223F71DFCA09BC5FD60769B68C7C9A645
F908D7C1C1E6B16558EC336DB56C8565D6CF091E8E6E400C9D8331BD118ACA34
251C963E1677CE699DD110FEF30565FD3D365695D21CE5082D314F1C489A39C5
81EB816B7D88F5E28F8EC856012C6174BF144DF5C6158F8E358CE74B52D69D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (book.dvi)
@start /Fa 205[35 50[{}1 66.4176 /CMR8 rf /Fb 194[71
6[45 45 45 3[45 6[35 35 40[{}7 90.9091 /CMR10 rf /Fc
189[53 42[35 23[{}2 66.4176 /CMMI8 rf /Fd 148[47 2[52
19[53 6[88 18[25 34[45 23[{}6 90.9091 /CMMI10 rf /Fe
140[36 35 3[50 75 25 48 1[25 1[45 1[40 3[45 3[25 1[25
4[68 10[70 5[61 13[45 45 45 45 45 45 45 45 45 25 30 45[{
T1Encoding ReEncodeFont}26 90.9091 /SFRM1095 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray 3705 100 a Fe(1)p
Black 0 TeXcolorgray 75 3807 a @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath 1.000 UL LTb 600 300 M 63 0 V 2787 0 R -63 0 V 600 740 M 63 0 V 2787 0 R -63 0 V 600 1180 M 63 0 V 2787 0 R -63 0 V 600 1620 M 63 0 V 2787 0 R -63 0 V 600 2060 M 63 0 V 2787 0 R -63 0 V 600 300 M 0 63 V 0 1697 R 0 -63 V 1170 300 M 0 63 V 0 1697 R 0 -63 V 1740 300 M 0 63 V 0 1697 R 0 -63 V 2310 300 M 0 63 V 0 1697 R 0 -63 V 2880 300 M 0 63 V 0 1697 R 0 -63 V 3450 300 M 0 63 V 0 1697 R 0 -63 V 1.000 UL LTb 600 300 M 2850 0 V 0 1760 V -2850 0 V 600 300 L 1.000 UL LT0 3087 1947 M 263 0 V 629 305 M 29 15 V 28 24 V 29 30 V 29 37 V 29 41 V 29 46 V 28 49 V 29 51 V 29 53 V 29 54 V 28 54 V 29 53 V 29 53 V 29 52 V 29 50 V 28 48 V 29 46 V 29 43 V 29 41 V 29 38 V 28 35 V 29 32 V 29 29 V 29 26 V 28 23 V 29 19 V 29 17 V 29 14 V 29 10 V 28 8 V 29 5 V 29 3 V 29 0 V 29 -3 V 28 -4 V 29 -7 V 29 -8 V 29 -11 V 29 -12 V 28 -13 V 29 -16 V 29 -16 V 29 -17 V 28 -19 V 29 -19 V 29 -21 V 29 -21 V 29 -21 V 28 -22 V 29 -23 V 29 -22 V 29 -23 V 29 -23 V 28 -23 V 29 -24 V 29 -23 V 29 -23 V 28 -22 V 29 -23 V 29 -22 V 29 -22 V 29 -22 V 28 -21 V 29 -21 V 29 -20 V 29 -20 V 29 -20 V 28 -19 V 29 -18 V 29 -18 V 29 -18 V 29 -17 V 28 -16 V 29 -16 V 29 -16 V 29 -15 V 28 -14 V 29 -14 V 29 -13 V 29 -13 V 29 -13 V 28 -12 V 29 -12 V 29 -11 V 29 -10 V 29 -11 V 28 -9 V 29 -10 V 29 -9 V 29 -8 V 28 -9 V 29 -8 V 29 -7 V 29 -7 V 29 -7 V 28 -7 V 29 -6 V 29 -6 V 1.000 UL LT1 3087 1847 M 263 0 V 629 304 M 29 13 V 28 18 V 29 25 V 29 28 V 29 32 V 29 35 V 28 36 V 29 37 V 29 37 V 29 38 V 28 36 V 29 35 V 29 34 V 29 32 V 29 30 V 28 28 V 29 26 V 29 22 V 29 21 V 29 17 V 28 16 V 29 12 V 29 10 V 29 8 V 28 5 V 29 3 V 29 1 V 29 -1 V 29 -3 V 28 -5 V 29 -6 V 29 -8 V 29 -9 V 29 -11 V 28 -11 V 29 -12 V 29 -14 V 29 -14 V 29 -14 V 28 -15 V 29 -16 V 29 -15 V 29 -16 V 28 -16 V 29 -16 V 29 -16 V 29 -16 V 29 -16 V 28 -16 V 29 -15 V 29 -15 V 29 -15 V 29 -15 V 28 -14 V 29 -14 V 29 -13 V 29 -13 V 28 -13 V 29 -12 V 29 -12 V 29 -11 V 29 -11 V 28 -11 V 29 -10 V 29 -9 V 29 -10 V 29 -8 V 28 -9 V 29 -8 V 29 -8 V 29 -7 V 29 -7 V 28 -6 V 29 -7 V 29 -6 V 29 -5 V 28 -6 V 29 -5 V 29 -5 V 29 -4 V 29 -4 V 28 -4 V 29 -4 V 29 -4 V 29 -3 V 29 -3 V 28 -3 V 29 -3 V 29 -3 V 29 -2 V 28 -3 V 29 -2 V 29 -2 V 29 -2 V 29 -2 V 28 -2 V 29 -1 V 29 -2 V 1.000 UL LT2 3087 1747 M 263 0 V 629 303 M 29 10 V 28 14 V 29 18 V 29 21 V 29 22 V 29 24 V 28 24 V 29 24 V 29 23 V 29 22 V 28 20 V 29 20 V 29 17 V 29 15 V 29 13 V 28 11 V 29 9 V 29 7 V 29 5 V 29 4 V 28 1 V 29 0 V 29 -2 V 29 -3 V 28 -5 V 29 -5 V 29 -7 V 29 -7 V 29 -8 V 28 -9 V 29 -9 V 29 -10 V 29 -10 V 29 -10 V 28 -10 V 29 -10 V 29 -11 V 29 -10 V 29 -10 V 28 -10 V 29 -9 V 29 -10 V 29 -9 V 28 -9 V 29 -8 V 29 -8 V 29 -8 V 29 -8 V 28 -7 V 29 -7 V 29 -6 V 29 -6 V 29 -6 V 28 -6 V 29 -5 V 29 -5 V 29 -4 V 28 -5 V 29 -4 V 29 -3 V 29 -4 V 29 -3 V 28 -3 V 29 -3 V 29 -3 V 29 -2 V 29 -3 V 28 -2 V 29 -2 V 29 -2 V 29 -2 V 29 -1 V 28 -2 V 29 -1 V 29 -1 V 29 -1 V 28 -1 V 29 -1 V 29 -1 V 29 -1 V 29 -1 V 28 -1 V 29 0 V 29 -1 V 29 0 V 29 -1 V 28 0 V 29 -1 V 29 0 V 29 0 V 28 -1 V 29 0 V 29 0 V 29 -1 V 29 0 V 28 0 V 29 0 V 29 0 V 1.000 UL LT3 3087 1647 M 263 0 V 600 300 M 29 8 V 29 25 V 28 41 V 29 58 V 29 74 V 29 91 V 29 108 V 28 123 V 29 141 V 29 157 V 29 173 V 28 190 V 29 206 V 29 223 V 17 142 V stroke grestore end showpage

@endspecial 1714 2459 a(Klassisk)29 b Fd(k)2111 2473
y Fc(B)2172 2459 y Fd(T)38 b Fb(=)25 b(0)p Fd(:)p Fb(6)31
b Fe(e)-8 b(V)2064 2376 y Fd(k)2111 2390 y Fc(B)2172
2376 y Fd(T)38 b Fb(=)25 b(0)p Fd(:)p Fb(4)31 b Fe(e)-8
b(V)2064 2293 y Fd(k)2111 2307 y Fc(B)2172 2293 y Fd(T)38
b Fb(=)25 b(0)p Fd(:)p Fb(5)31 b Fe(e)-8 b(V)2064 2209
y Fd(k)2111 2223 y Fc(B)2172 2209 y Fd(T)38 b Fb(=)25
b(0)p Fd(:)p Fb(6)31 b Fe(e)-8 b(V)1477 3788 y(Energi)31
b Fd(h\027)36 b Fe([e)-8 b(V])158 2824 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg exch translate
 158 2824 a -190
2801 a Fd(M)-102 2815 y Fc(\027)-58 2801 y Fb(\()p Fd(h\027)6
b Fb(\))31 b Fe([e)-8 b(V/nm)441 2768 y Fa(2)481 2801
y Fe(])158 2824 y
 currentpoint grestore moveto
 158 2824 a 2927 3670 a Fe(5)-520 b(4)g(3)g(2)g(1)g(0)
327 2120 y(2e-06)257 2487 y(1.5e-06)327 2853 y(1e-06)327
3220 y(5e-07)488 3587 y(0)p Black 0 TeXcolorgray Black
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
